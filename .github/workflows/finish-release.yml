name: Finish Release
on:
  # push:
  #   branches:
  #     - master

  workflow_dispatch:
    inputs:
      versionName:
        description: "Name of the release"
        required: true
        default: 1.0.0

      message:
        default: "chore: some test message"
        description: "commit message"
        required: true

jobs:
  finishrelease:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      # - name: Create release branch
      #   run: git checkout -b release/v${{ github.event.inputs.versionName }}

      - name: Initialize mandatory git config
        run: |
          git config user.name "Mohit Palyekar"
          git config user.email mohit.palyekar@creativecapsule.com
      # - name: Change version number and name
      #   run: printf 'ext.version_code = ${{ github.event.inputs.versionCode }}\next.version_name = "${{ github.event.inputs.versionName }}"\n' > app_versions.gradle

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog

        # run: echo "::set-output name=commit::$(git rev-parse HEAD)"
      # - name: Commit changelog and manifest files
      #   id: make-commit
      #   run: |
      #     git add CHANGELOG.md
      #     git commit --message "Prepare release ${{ github.event.inputs.versionName }}"
      #     echo "::set-output name=commit::$(git rev-parse HEAD)"

      # - name: Push new branch
      #   run: git push origin release/v${{ github.event.inputs.versionName }}

      - uses: actions/checkout@v2

      - name: Create pull request for master branch
        uses: repo-sync/pull-request@v2
        with:
          id: open-master-pr
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: release/v${{ github.event.inputs.versionName }}
          destination_branch: master
          pr_title: v${{ github.event.inputs.versionName }} into master
          pr_body: >
            This PR is auto-generated. This PR will merge release/v${{ github.event.inputs.versionName }} changes in to master branch.
          pr_label: "automated pr"
      - name: output-url
        run: echo ${{steps.open-pr.outputs.pr_url}}
      - name: output-number
        run: echo ${{steps.open-pr.outputs.pr_number}}

      - name: Create Pull Request for develop
        uses: repo-sync/pull-request@v2
        with:
          id: open-develop-pr
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: release/v${{ github.event.inputs.versionName }}
          destination_branch: develop
          pr_title: v${{ github.event.inputs.versionName }} into develop
          pr_body: >
            This PR is auto-generated. This PR will merge release/v${{ github.event.inputs.versionName }} changes in to develop branch.
          pr_label: "automated pr"
      - name: output-url
        run: echo ${{steps.open-pr.outputs.pr_url}}
      - name: output-number
        run: echo ${{steps.open-pr.outputs.pr_number}}
